{
  "name": "syncsphere-backend",
  "version": "1.0.0",
  "description": "SyncSphere Backend API - Data recovery and phone transfer platform",
  "main": "index.js",
  "scripts": {
    "start": "node src/server.js",
    "dev": "nodemon src/server.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --config jest.config.nomocks.js --testPathPattern=integration",
    "test:integration:nomocks": "jest --config jest.config.nomocks.js",
    "test:all": "npm run test && npm run test:integration:nomocks",
    "test:e2e": "jest --testPathPattern=e2e",
    "test:services": "jest --testPathPattern=services",
    "test:api": "jest --testPathPattern=api",
    "test:db": "jest --testPathPattern=database",
    "test:security": "jest --testPathPattern=security",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "test:setup": "docker-compose -f docker-compose.test.yml up -d && npm run test:wait-db",
    "test:teardown": "docker-compose -f docker-compose.test.yml down",
    "test:wait-db": "node -e \"const db = require('./tests/utils/databaseUtils'); db.waitForReady().then(() => console.log('Database ready')).catch(console.error)\"",
    "lint": "eslint src/",
    "lint:fix": "eslint src/ --fix",
    "format": "prettier --write src/",
    "db:setup": "node scripts/setup-database.js",
    "db:setup:windows": "powershell -ExecutionPolicy Bypass -File scripts/setup-postgres-windows.ps1",
    "db:setup:unix": "bash scripts/setup-postgres-unix.sh",
    "db:setup:docker": "bash scripts/setup-postgres-docker.sh",
    "db:create": "node scripts/create-database.js",
    "db:init": "psql -h localhost -U postgres -d syncsphere -f scripts/init-db.sql",
    "db:reset": "npm run db:drop && npm run db:create && npm run db:init",
    "db:drop": "dropdb -h localhost -U postgres syncsphere --if-exists",
    "db:test": "node scripts/test-connection.js",
    "db:validate": "node scripts/validate-schema.js",
    "db:validate:verbose": "node scripts/validate-schema.js --verbose",
    "db:secure": "node scripts/secure-database.js",
    "db:backup": "node scripts/backup-database.js backup",
    "db:backup:verbose": "node scripts/backup-database.js backup --verbose",
    "db:restore": "node scripts/backup-database.js restore",
    "db:backup:list": "node scripts/backup-database.js list",
    "db:backup:cleanup": "node scripts/backup-database.js cleanup",
    "password:generate": "node scripts/generate-secure-password.js",
    "password:interactive": "node scripts/generate-secure-password.js --interactive",
    "security:test": "node scripts/test-security.js",
    "security:report": "node scripts/test-security.js --report",
    "docker:up": "docker-compose -f docker-compose.postgres.yml up -d",
    "docker:down": "docker-compose -f docker-compose.postgres.yml down",
    "docker:logs": "docker-compose -f docker-compose.postgres.yml logs -f"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "commonjs",
  "dependencies": {
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/typography": "^0.5.16",
    "archiver": "^7.0.1",
    "autoprefixer": "^10.4.21",
    "bcryptjs": "^3.0.2",
    "better-sqlite3": "^12.2.0",
    "compression": "^1.8.0",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "dotenv": "^17.2.0",
    "express": "^5.1.0",
    "express-rate-limit": "^7.5.1",
    "express-validator": "^7.2.1",
    "helmet": "^8.1.0",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "mongoose": "^8.16.4",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "node-cron": "^3.0.3",
    "nodemailer": "^6.9.8",
    "pg": "^8.16.3",
    "postcss": "^8.5.6",
    "recharts": "^3.1.0",
    "redis": "^5.6.0",
    "socket.io": "^4.8.1",
    "stripe": "^14.14.0",
    "tailwindcss": "^3.4.17",
    "unzipper": "^0.12.3",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "eslint": "^9.30.1",
    "jest": "^30.0.4",
    "nodemon": "^3.1.10",
    "prettier": "^3.6.2",
    "supertest": "^7.1.3"
  }
}
